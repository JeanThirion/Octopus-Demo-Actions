step "calculate-deployment-mode" {
    name = "Calculate Deployment Mode - Updated"

    action {
        properties = {
            Octopus.Action.RunOnServer = "true"
            Octopus.Action.Template.Id = "ActionTemplates-21"
            Octopus.Action.Template.Version = "5"
        }
        worker_pool_variable = ""
    }
}

step "create-db-runbook" {
    condition = "Variable"
    name = "Create DB (Runbook)"
    properties = {
        Octopus.Step.ConditionVariableExpression = "#{unless Octopus.Deployment.Error}#{Octopus.Action[Calculate Deployment Mode].Output.RunOnDeploy}#{/unless}"
    }

    action {
        properties = {
            Octopus.Action.Template.Id = "ActionTemplates-10"
            Octopus.Action.Template.Version = "17"
            Run.Runbook.Api.Key = "#{Project.Runbook.Api.Key}"
            Run.Runbook.AutoApproveManualInterventions = "No"
            Run.Runbook.Base.Url = "#{Octopus.Web.ServerUri}"
            Run.Runbook.CancelInSeconds = "1800"
            Run.Runbook.CustomNotes.Toggle = "False"
            Run.Runbook.DateTime = "N/A"
            Run.Runbook.Environment.Name = "#{Octopus.Environment.Name}"
            Run.Runbook.Machines = "N/A"
            Run.Runbook.ManualIntervention.EnvironmentToUse = "#{Octopus.Environment.Name}"
            Run.Runbook.Name = "Configure SQL"
            Run.Runbook.Project.Name = "#{Octopus.Project.Name}"
            Run.Runbook.Space.Name = "#{Octopus.Space.Name}"
            Run.Runbook.UsePublishedSnapShot = "True"
            Run.Runbook.Waitforfinish = "True"
        }
        worker_pool = "hosted-windows"
    }
}

step "generate-what-if-report" {
    condition = "Variable"
    name = "Generate What If Report"
    properties = {
        Octopus.Step.ConditionVariableExpression = "#{unless Octopus.Deployment.Error}#{Octopus.Action[Calculate Deployment Mode].Output.RunOnDeploy}#{/unless}"
    }

    action {
        properties = {
            Database.Deploy.ConnectionString = "#{Project.Connection.String}"
            Database.Deploy.Package = "{\"PackageId\":\"Trident.Database\",\"FeedId\":\"octopus-server-built-in\"}"
            Database.Deploy.PathToDBUpExe = ".\\Octopus.Trident.Database.DbUp"
            Database.Deploy.ReportPath = "#{Project.Database.Report.Path}"
            Database.Deploy.WhatIf = "True"
            Octopus.Action.Template.Id = "ActionTemplates-9"
            Octopus.Action.Template.Version = "1"
        }
        worker_pool = "hosted-windows"

        packages "Database.Deploy.Package" {
            acquisition_location = "Server"
            feed = "octopus-server-built-in"
            package_id = "Trident.Database"
            properties = {
                Extract = "True"
                PackageParameterName = "Database.Deploy.Package"
                Purpose = ""
                SelectionMode = "deferred"
            }
        }
    }
}

step "review-database-changes" {
    condition = "Always"
    name = "Review Database Changes"

    action {
        action_type = "Octopus.Manual"
        environments = ["production"]
        notes = ""
        properties = {
            Octopus.Action.Manual.BlockConcurrentDeployments = "False"
            Octopus.Action.Manual.Instructions = "Please review the database changes from the artifact attached to this deployment."
            Octopus.Action.Manual.ResponsibleTeamIds = "global/octopus-managers"
            Octopus.Action.RunOnServer = "false"
        }
    }
}

step "deploy-database-changes" {
    condition = "Variable"
    name = "Deploy Database Changes"
    properties = {
        Octopus.Step.ConditionVariableExpression = "#{unless Octopus.Deployment.Error}#{Octopus.Action[Calculate Deployment Mode].Output.RunOnDeploy}#{/unless}"
    }

    action {
        properties = {
            Database.Deploy.ConnectionString = "#{Project.Connection.String}"
            Database.Deploy.Package = "{\"PackageId\":\"Trident.Database\",\"FeedId\":\"octopus-server-built-in\"}"
            Database.Deploy.PathToDBUpExe = ".\\Octopus.Trident.Database.DbUp"
            Database.Deploy.ReportPath = "#{Project.Database.Report.Path}"
            Database.Deploy.WhatIf = "False"
            Octopus.Action.Template.Id = "ActionTemplates-9"
            Octopus.Action.Template.Version = "1"
        }
        worker_pool = "hosted-windows"

        packages "Database.Deploy.Package" {
            acquisition_location = "Server"
            feed = "octopus-server-built-in"
            package_id = "Trident.Database"
            properties = {
                Extract = "True"
                PackageParameterName = "Database.Deploy.Package"
                Purpose = ""
                SelectionMode = "deferred"
            }
        }
    }
}

step "deploy-trident-website" {
    name = "Deploy Trident Website"
    properties = {
        Octopus.Action.TargetRoles = "trident-web"
    }

    action {
        action_type = "Octopus.TentaclePackage"
        properties = {
            Octopus.Action.EnabledFeatures = "Octopus.Features.JsonConfigurationVariables"
            Octopus.Action.Package.DownloadOnTentacle = "False"
            Octopus.Action.Package.FeedId = "octopus-server-built-in"
            Octopus.Action.Package.JsonConfigurationVariablesTargets = "appSettings.json"
            Octopus.Action.Package.PackageId = "Trident.Web"
            Octopus.Action.RunOnServer = "false"
        }
        worker_pool_variable = ""

        packages {
            acquisition_location = "Server"
            feed = "octopus-server-built-in"
            package_id = "Trident.Web"
            properties = {
                SelectionMode = "immediate"
            }
        }
    }
}

step "verify-application" {
    name = "Verify Application"

    action {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.Script.ScriptBody = "Write-Host \"This application has been verified.\""
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "PowerShell"
            OctopusUseBundledTooling = "False"
        }
        worker_pool = "hosted-windows"
    }
}

step "teams-notify-everyone" {
    name = "Teams - Notify Everyone ðŸš€"
    properties = {
        Octopus.Action.TargetRoles = "trident-web"
    }

    action {
        environments = ["test", "staging", "production"]
        properties = {
            Octopus.Action.RunOnServer = "false"
            Octopus.Action.Template.Id = "ActionTemplates-6"
            Octopus.Action.Template.Version = "2"
            PowerAutomatePostAdaptiveCard.Body = "#{Notification.Body.Text}"
            PowerAutomatePostAdaptiveCard.BodyColor = "default"
            PowerAutomatePostAdaptiveCard.ButtonTitle = "Bored ? Watch this !"
            PowerAutomatePostAdaptiveCard.ButtonUrl = "https://www.youtube.com/watch?v=9z1yODBBeE8&ab_channel=Kr%C4%99cio%C5%82aTV"
            PowerAutomatePostAdaptiveCard.HookUrl = "#{Notification.Teams.Webhook.Url}"
            PowerAutomatePostAdaptiveCard.RetryCount = "1"
            PowerAutomatePostAdaptiveCard.RetryDelay = "100"
            PowerAutomatePostAdaptiveCard.RetryPosting = "False"
            PowerAutomatePostAdaptiveCard.Timeout = "60"
            PowerAutomatePostAdaptiveCard.Title = "#{Notification.Subject.Text} - Jean [SSW]"
            PowerAutomatePostAdaptiveCard.TitleColor = "attention"
        }
        worker_pool_variable = ""
    }
}